# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: taskqueue/protobuf/service.proto
# plugin: grpclib.plugin.main
import abc

import grpclib.const
import grpclib.client

import google.protobuf.any_pb2
import google.protobuf.empty_pb2
import taskqueue.protobuf.service_pb2


class TaskQueueBase(abc.ABC):

    @abc.abstractmethod
    async def add(self, stream):
        pass

    @abc.abstractmethod
    async def Add(self, stream):
        pass

    def __mapping__(self):
        return {
            '/taskqueue.service.TaskQueue/add': grpclib.const.Handler(
                self.add,
                grpclib.const.Cardinality.UNARY_UNARY,
                taskqueue.protobuf.service_pb2.Task,
                google.protobuf.empty_pb2.Empty,
            ),
            '/taskqueue.service.TaskQueue/Add': grpclib.const.Handler(
                self.Add,
                grpclib.const.Cardinality.UNARY_UNARY,
                taskqueue.protobuf.service_pb2.Task,
                google.protobuf.empty_pb2.Empty,
            ),
        }


class TaskQueueStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.add = grpclib.client.UnaryUnaryMethod(
            channel,
            '/taskqueue.service.TaskQueue/add',
            taskqueue.protobuf.service_pb2.Task,
            google.protobuf.empty_pb2.Empty,
        )
        self.Add = grpclib.client.UnaryUnaryMethod(
            channel,
            '/taskqueue.service.TaskQueue/Add',
            taskqueue.protobuf.service_pb2.Task,
            google.protobuf.empty_pb2.Empty,
        )
